# Generated by Django 4.2.4 on 2024-09-17 19:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('administration', '0003_subproject_sort_order_task_sort_order_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=300)),
                ('description', models.TextField()),
                ('summary_dataset', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_creator', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_editor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=300)),
                ('description', models.TextField(blank=True, null=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('elevation', models.IntegerField(blank=True, null=True)),
                ('river_kilometer', models.FloatField(blank=True, null=True)),
                ('projection', models.CharField(blank=True, max_length=100, null=True)),
                ('trt_pop_id', models.CharField(blank=True, max_length=20, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_creator', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_editor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=300)),
                ('description', models.TextField(blank=True, null=True)),
                ('type', models.CharField(choices=[('Temperature Logger', 'Temperature Logger'), ('Multiparameter Probe', 'Multiparameter Probe'), ('Field Thermometer', 'Field Thermometer'), ('Automated Water Sampler', 'Automated Water Sampler'), ('Data Tablet', 'Data Tablet')])),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=50, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=100, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_creator', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administration.project')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_editor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column_order', models.IntegerField(blank=True, default=1, help_text='Establishes column order in AG Grid', null=True)),
                ('required', models.BooleanField(default=False)),
                ('headerName', models.CharField(help_text='The display name for the column header', max_length=255)),
                ('field', models.CharField(help_text='The data field for the column', max_length=255)),
                ('sortable', models.BooleanField(default=True, help_text='Whether the column is sortable')),
                ('filter', models.BooleanField(default=True, help_text='Whether the column can be filtered')),
                ('resizable', models.BooleanField(default=True, help_text='Whether the column can be resized')),
                ('editable', models.BooleanField(default=False, help_text='Whether the column is editable')),
                ('checkboxSelection', models.BooleanField(default=False, help_text='Whether to display a checkbox selection')),
                ('pinned', models.CharField(choices=[('left', 'Left'), ('right', 'Right'), ('none', 'None')], default='none', help_text='Whether the column is pinned to the left or right', max_length=10)),
                ('width', models.IntegerField(blank=True, help_text='The width of the column in pixels', null=True)),
                ('minWidth', models.IntegerField(blank=True, help_text='The minimum width of the column in pixels', null=True)),
                ('maxWidth', models.IntegerField(blank=True, help_text='The maximum width of the column in pixels', null=True)),
                ('hide', models.BooleanField(default=False, help_text='Whether the column is hidden by default')),
                ('cellRenderer', models.CharField(blank=True, help_text='Custom cell renderer for the column', max_length=255, null=True)),
                ('cellStyle', models.TextField(blank=True, help_text='CSS styles to be applied to the cell', null=True)),
                ('cellClass', models.TextField(blank=True, help_text='CSS classes to be applied to the cell', null=True)),
                ('valueFormatter', models.CharField(blank=True, help_text='Custom value formatter function for the column', max_length=255, null=True)),
                ('headerTooltip', models.CharField(blank=True, help_text='Tooltip to be shown when the user hovers over the header', max_length=255, null=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_supervisor', to='cdms.dataset')),
            ],
            options={
                'ordering': ['column_order'],
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('date', models.DateField()),
                ('data', models.JSONField()),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_creator', to=settings.AUTH_USER_MODEL)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cdms.dataset')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cdms.instrument')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administration.project')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_editor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
