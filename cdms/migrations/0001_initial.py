# Generated by Django 4.2.4 on 2024-11-05 22:37

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('location', '0001_initial'),
        ('common', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('administration', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('display', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=300)),
                ('description', models.TextField(blank=True, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=50, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=100, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_creator', to=settings.AUTH_USER_MODEL)),
                ('instrument_type', models.ForeignKey(limit_choices_to={'object_type': 'Instrument'}, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_object_lookups', to='common.objectlookup')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_editor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_for', models.CharField(choices=[('header', 'Header'), ('detail', 'Detail')])),
                ('required', models.BooleanField(default=False)),
                ('field', models.CharField(help_text='The data field for the column', max_length=255)),
                ('headerName', models.CharField(help_text='The display name for the column header', max_length=255)),
                ('headerTooltip', models.CharField(blank=True, help_text='Tooltip to be shown when the user hovers over the header', max_length=255, null=True)),
                ('sortingOrder', models.IntegerField(blank=True, default=1, help_text='Establishes column order in AG Grid', null=True)),
                ('editable', models.BooleanField(default=False, help_text='Whether the column is editable')),
                ('filter', models.BooleanField(default=True, help_text='Whether the column can be filtered - Grid will determine filter based on datatype.')),
                ('pinned', models.CharField(blank=True, choices=[('left', 'Left'), ('right', 'Right')], help_text='Whether the column is pinned to the left or right', max_length=10, null=True)),
                ('width', models.IntegerField(blank=True, help_text='The width of the column in pixels', null=True)),
                ('minWidth', models.IntegerField(blank=True, help_text='The minimum width of the column in pixels', null=True)),
                ('maxWidth', models.IntegerField(blank=True, help_text='The maximum width of the column in pixels', null=True)),
                ('hide', models.BooleanField(default=False, help_text='Whether the column is hidden by default')),
                ('cellRenderer', models.CharField(blank=True, help_text='Custom cell renderer for the column', max_length=255, null=True)),
                ('cellStyle', models.JSONField(blank=True, help_text='An object of CSS styles to be applied to the cell. ', null=True)),
                ('cellClass', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, help_text='CSS classes to be applied to the cell. Array of strings (classes).', null=True, size=None)),
                ('valueFormatter', models.CharField(blank=True, help_text='Custom value formatter function for the column', max_length=255, null=True)),
                ('cellEditor', models.TextField(blank=True, null=True)),
                ('cellEditorParams', models.JSONField(blank=True, null=True)),
                ('task_type', models.ForeignKey(limit_choices_to={'object_type': 'Task'}, on_delete=django.db.models.deletion.PROTECT, to='common.objectlookup')),
            ],
            options={
                'ordering': ['sortingOrder'],
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('display', models.BooleanField(default=True)),
                ('activity_id', models.IntegerField(editable=False, unique=True)),
                ('header', models.JSONField(default=list)),
                ('detail', models.JSONField(default=list)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_creator', to=settings.AUTH_USER_MODEL)),
                ('instrument', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cdms.instrument')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.location')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='administration.task')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_editor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activities',
            },
        ),
    ]
